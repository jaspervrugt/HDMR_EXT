function C = legendre(m,d)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                         %
%  HHH   HHH DDDDDDDD  MMM    MMM RRRRRRR    EEEEEEEE XXX   XXX TTTTTTTTT %
%  HHH   HHH DDDDDDDDD MMM    MMM RRRRRRRR   EEEEEEEE XXX   XXX TTTTTTTTT %
%  HHH   HHH DDD   DDD MMM    MMM RRR   RRR  EEE       XXX XXX  TT TTT TT %
%  HHH   HHH DDD   DDD MMMM  MMMM RRR   RRR  EEE       XXX XXX  T  TTT  T %
%  HHHHHHHHH DDD   DDD MMMMMMMMMM RRRRRRRR   EEEEEE     XXXXX      TTT    %
%  HHHHHHHHH DDD   DDD MMMMMMMMMM RRRRRRR    EEEEEE     XXXXX      TTT    %
%  HHH   HHH DDD   DDD MMM    MMM RRRRRRR    EEE       XXX XXX     TTT    %
%  HHH   HHH DDD   DDD MMM    MMM RRR  RRR   EEE       XXX XXX     TTT    %
%  HHH   HHH DDDDDDDDD MMM    MMM RRR   RRR  EEEEEEEE XXX   XXX    TTT    %
%  HHH   HHH DDDDDDDD  MMM    MMM RRR   RRR  EEEEEEEE XXX   XXX    TTT    %
%                                                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This code constructs Legendre Polynomials much faster than legendreP    %
%                                                                         %
%  SYNOPSIS                                                               %
%   C = legendre(m,d)                                                     %
%                                                                         %
%  Â© Written by Jasper A. Vrugt & Abdullah Sahin, Jan. 2018               %
%    University of California Irvine                                      %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %

method = 'backward';     % 'forward' or 'backward'
C = zeros(m,m+1,d);

switch method
    case 'forward'
        switch m
            case 1
                p = [1 0]; % +3
            case 2
                p = [ 1, 0, 0; 1.5, 0, -0.5 ]; % +4
            case 3
                p = [ 1, 0, 0, 0; 1.5, 0, -0.5, 0; 2.5, 0, -1.5, 0 ]; % +5
            case 4
                p = [ 1, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0; 2.5, 0, -1.5, ...
                    0, 0; 4.375, 0, -3.75, 0, 0.375 ]; % +6
            case 5
                p = [ 1, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0, 0; 2.5, 0, ...
                    -1.5, 0, 0, 0; 4.375, 0, -3.75, 0, 0.375, 0; 7.875, ...
                    0, -8.75, 0, 1.875, 0 ]; % +7
            case 6
                p = [ 1, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0, 0, 0; ...
                    2.5, 0, -1.5, 0, 0, 0, 0; 4.375, 0, -3.75, 0, ...
                    0.375, 0, 0; 7.875, 0, -8.75, 0, 1.875, 0, 0; ...
                    14.4375, 0, -19.6875, 0, 6.5625, 0, -0.3125 ]; % +8
            case 7
                p = [ 1, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0, 0, ...
                    0, 0; 2.5, 0, -1.5, 0, 0, 0, 0, 0; 4.375, 0, ...
                    -3.75, 0, 0.375, 0, 0, 0; 7.875, 0, -8.75, 0, ...
                    1.875, 0, 0, 0; 14.4375, 0, -19.6875, 0, 6.5625, ...
                    0, -0.3125, 0; 26.8125, 0, -43.3125, 0, 19.6875, ...
                    0, -2.1875, 0 ]; % +9
            case 8
                p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0, ...
                    0, 0, 0, 0; 2.5, 0, -1.5, 0, 0, 0, 0, 0, 0; 4.375, ...
                    0, -3.75, 0, 0.375, 0, 0, 0, 0; 7.875, 0, -8.75, ...
                    0, 1.875, 0, 0, 0, 0; 14.4375, 0, -19.6875, 0, ...
                    6.5625, 0, -0.3125, 0, 0; 26.8125, 0, -43.3125, ...
                    0, 19.6875, 0, -2.1875, 0, 0; 50.2734375, 0, ...
                    -93.84375, 0, 54.140625, 0, -9.84375, ...
                    0, 0.2734375 ]; %+10
            case 9
                p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, 0, ...
                    0, 0, 0, 0, 0; 2.5, 0, -1.5, 0, 0, 0, 0, 0, 0, 0; ...
                    4.375, 0, -3.75, 0, 0.375, 0, 0, 0, 0, 0; 7.875, ...
                    0, -8.75, 0, 1.875, 0, 0, 0, 0, 0; 14.4375, 0, ...
                    -19.6875, 0, 6.5625, 0, -0.3125, 0, 0, 0; 26.8125, ...
                    0, -43.3125, 0, 19.6875, 0, -2.1875, 0, 0, 0; ...
                    50.2734375, 0, -93.84375, 0, 54.140625, 0, ...
                    -9.84375, 0, 0.2734375, 0; 94.9609375, ...
                    0, -201.09375, 0, 140.765625, 0, -36.09375, 0, ...
                    2.4609375, 0 ]; % +11
            case 10
                p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, ...
                    0, 0, 0, 0, 0, 0, 0, 0; 2.5, 0, -1.5, 0, 0, 0, 0, ...
                    0, 0, 0, 0; 4.375, 0, -3.75, 0, 0.375, 0, 0, 0, ...
                    0, 0, 0; 7.875, 0, -8.75, 0, 1.875, 0, 0, 0, 0, ...
                    0, 0; 14.4375, 0, -19.6875, 0, 6.5625, 0, -0.3125, ...
                    0, 0, 0, 0; 26.8125, 0, -43.3125, 0, 19.6875, 0, ...
                    -2.1875, 0, 0, 0, 0; 50.2734375, 0, -93.84375, 0, ...
                    54.140625, 0, -9.84375, 0, ...
                    0.2734375, 0, 0; 94.9609375, 0, -201.09375, 0, ...
                    140.765625, 0, -36.09375, 0, 2.4609375, 0, 0; ...
                    180.4257813, 0, -427.3242188, 0, 351.9140625, 0, ...
                    -117.3046875, 0, 13.53515625, 0, -0.24609375 ]; % +12
            case 11
                p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, ...
                    0, 0, 0, 0, 0, 0, 0, 0, 0; 2.5, 0, -1.5, 0, 0, 0, ...
                    0, 0, 0, 0, 0, 0; 4.375, 0, -3.75, 0, 0.375, 0, 0, ...
                    0, 0, 0, 0, 0; 7.875, 0, -8.75, 0, 1.875, 0, 0, 0, ...
                    0, 0, 0, 0; 14.4375, 0, -19.6875, 0, 6.5625, 0, ...
                    -0.3125, 0, 0, 0, 0, 0; 26.8125, 0, -43.3125, 0, ...
                    19.6875, 0, -2.1875, 0, 0, 0, 0, 0; 50.2734375, ...
                    0, -93.84375, 0, 54.140625, 0, -9.84375, 0, ...
                    0.2734375, 0, 0, 0; 94.9609375, 0, -201.09375, ...
                    0, 140.765625, 0, -36.09375, 0, 2.4609375, 0, 0, ...
                    0; 180.4257813, 0, -427.3242188, 0, 351.9140625, ...
                    0, -117.3046875, 0, 13.53515625, 0, -0.24609375 0; ...
                    344.4492188, 0, -902.1289063, 0, 854.6484375, 0, ...
                    -351.9140625, 0, 58.65234375, 0, 2.70703125, 0 ]; % +13
            case 12
                p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, ...
                    -0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 2.5, 0, -1.5, ...
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 4.375, 0, -3.75, 0, ...
                    0.375, 0, 0, 0, 0, 0, 0, 0, 0; 7.875, 0, -8.75, 0, ...
                    1.875, 0, 0, 0, 0, 0, 0, 0, 0; 14.4375, 0, ...
                    -19.6875, 0, 6.5625, 0, -0.3125, 0, 0, 0, 0, 0, 0; ...
                    26.8125, 0, -43.3125, 0, 19.6875, 0, -2.1875, 0, 0, ...
                    0, 0, 0, 0; 50.2734375, 0, -93.84375, 0, 54.140625, ...
                    0, -9.84375, 0, 0.2734375, 0, 0, 0, 0; 94.9609375, ...
                    0, -201.09375, 0, 140.765625, 0, -36.09375, 0, ...
                    2.4609375, 0, 0, 0, 0; 180.4257813, 0, ...
                    -427.3242188, 0, 351.9140625, 0, -117.3046875, 0, ...
                    13.53515625, 0, -0.24609375, 0, 0; 344.4492188, ...
                    0, -902.1289063, 0, 854.6484375, 0, -351.9140625, ...
                    0, 58.65234375, 0, 2.70703125, 0, 0; 660.1943359, ...
                    0, -1894.470703, 0, 2029.790039, 0, -997.0898438, ...
                    0, 219.9462891, 0, -17.59570313, 0, 0.2255859375 ]; % +14
        end
    case 'backward'
        % Starting from case 12, then removing rows and columns from p
        % Free from copy-paste mistakes individual cases        
        p = [ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 1.5, 0, -0.5, 0, ...
            0, 0, 0, 0, 0, 0, 0, 0, 0; 2.5, 0, -1.5, 0, 0, 0, 0, 0, ...
            0, 0, 0, 0, 0; 4.375, 0, -3.75, 0, 0.375, 0, 0, 0, 0, ...
            0, 0, 0, 0; 7.875, 0, -8.75, 0, 1.875, 0, 0, 0, 0, 0, ...
            0, 0, 0; 14.4375, 0, -19.6875, 0, 6.5625, 0, -0.3125, ...
            0, 0, 0, 0, 0, 0; 26.8125, 0, -43.3125, 0, 19.6875, 0, ...
            -2.1875, 0, 0, 0, 0, 0, 0; 50.2734375, 0, -93.84375, ...
            0, 54.140625, 0, -9.84375, 0, 0.2734375, 0, 0, 0, 0; ...
            94.9609375, 0, -201.09375, 0, 140.765625, 0, -36.09375, ...
            0, 2.4609375, 0, 0, 0, 0; 180.4257813, 0, -427.3242188, ...
            0, 351.9140625, 0, -117.3046875, 0, 13.53515625, 0, ...
            -0.24609375, 0, 0; 344.4492188, 0, -902.1289063, 0, ...
            854.6484375, 0, -351.9140625, 0, 58.65234375, 0, ...
            2.70703125, 0, 0; 660.1943359, 0, -1894.470703, 0, ...
            2029.790039, 0, -997.0898438, 0, 219.9462891, 0, ...
            -17.59570313, 0, 0.2255859375 ];
        p(m+1:12,:) = []; p(:,m+2:13) = [];
end

% Now duplicate each slice in third dimension
for i = 1:d
    C(1:m,1:m+1,i) = p;
end

end
